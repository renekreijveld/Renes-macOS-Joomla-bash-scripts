#!/bin/sh

# jbackup -- Create a full backup (including database) of a Joomla website to .tgz file.
# Supports Joomla 1.0 - 3.x
#
# Copyright 2014 Rene Kreijveld - r.kreijveld@gakijken.nl
#
# This program is free software; you may redistribute it and/or modify it.
#
# Warning! This script needs the file jfunctions. This has to be installed in the same directory as this script.
#
# Version history
# 3.0 Initial version
# 3.1 Added usage
# 3.2 Code rewrite and remove -e option in echos
# 3.3 Typo correction

# Determine path of script
mypath=$(cd $(dirname ${0}); pwd -P)
myname=$(basename ${0})

# Version
version=3.3

# display usage information
usage() {
	echo ""
	echo "${myname} version ${version}, written by Rene Kreijveld."
	echo ""
	echo "Usage: ${myname} [-z] [-h]"
	echo ""
	echo "Default action is .tgz backup."
	echo "-z Zip. Backup to a zipfile instead of a tgzfile."
	echo "-h Help. Display this info."
	echo ""
	echo "Run ${myname} at the root of your website, where the configuration.php is."
	echo ""
	exit 0
}

# Default no zipfile
zip="no"

# process the arguments
while getopts zth opt; do
	case "${opt}" in
		z) zip="yes";;
		h) usage;;
		\?) usage;;
	esac
done

# include general functions
if [ ! -e ${mypath}/jfunctions ]
then
	echo ""
	echo "Cannot continue: script jfunctions not found."
	echo ""
	exit 1
else
	. ${mypath}/jfunctions
fi

echo ""
echo "${myname} version ${version}, written by Rene Kreijveld."
echo ""
echo "This is a Joomla! ${versr}.${versd} site. Starting backup..."

# dump the database to a .sql file
echo "Creating database dump..."
if mysqldump --skip-opt --add-drop-table --add-locks --create-options --disable-keys --lock-tables --quick --set-charset --host=${host} --user=${dbuser} --password=${password} ${database} > ${database}.sql 2>/dev/null
then
	echo "${database}.sql created."
else
	echo "Error creating database dump."
	exit 1
fi

# check if htaccess is present
if [ -e .htaccess ]; then
	htaccess=".htaccess*"
else
	htaccess=""
fi

# create the backup
if [ "${zip}" == "no" ]; then
	tar czf ${sitename}.tgz ${htaccess} *
	echo "Your backup is ready in ${sitename}.tgz:"
	ls -l ${sitename}.tgz
else
	zip -q -r ${sitename}.zip ${htaccess} *
	echo "Your backup is ready in ${sitename}.zip:"
	ls -l ${sitename}.zip
fi

# cleanup datebase dump
rm ${database}.sql